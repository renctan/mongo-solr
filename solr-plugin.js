var MSolrConst={CONFIG_COLLECTION_NAME:"msolr",SOLR_URL_KEY:"url",NS_KEY:"ns",COLL_FIELD_KEY:"f",LAST_TIMESTAMP_KEY:"ts"},MSolrUtil={getLastError:function(a,b,c){a=a.runCommand({getlasterror:1,w:b,wtimeout:c});a.err!=null&&print("Failed to apply changes to all replicas: "+a.err)}},MSolrServer=function(a,b,c){c=c||{};this.repCount=c.repCount||1;this.timeout=c.timeout||1E3;this.configColl=a;this.configDB=a.getDB();this.loc=b};
MSolrServer.prototype.index=function(a,b){a.indexOf(".")==-1?this._indexByDB(a):this._indexByNS(a,b)};MSolrServer.prototype.remove=function(a,b){a.indexOf(".")==-1?this._removeByDB(a):this._removeByNS(a,b)};MSolrServer.prototype._indexByDB=function(a){for(var b=this.configColl.getMongo().getDB(a).getCollectionNames(),c,d=b.length;d--;)c=b[d],/^system\..*/.test(c)||this._indexByNS(a+"."+b[d],null);MSolrUtil.getLastError(this.configDB,this.repCount,this.timeout)};
MSolrServer.prototype._removeByDB=function(a){var b={};b[MSolrConst.SOLR_URL_KEY]=this.loc;b[MSolrConst.NS_KEY]=RegExp("^"+a+"\\..+");this.configColl.remove(b);MSolrUtil.getLastError(this.configDB,this.repCount,this.timeout)};
MSolrServer.prototype._indexByNS=function(a,b){var c={},d={},e={};e[MSolrConst.SOLR_URL_KEY]=this.loc;e[MSolrConst.NS_KEY]=a;if(b!=null)d[b]=MSolrDb.INDEX_COLL_FIELD_OPT,c[MSolrConst.COLL_FIELD_KEY]=d;this.configColl.update(e,{$set:c},!0);MSolrUtil.getLastError(this.configDB,this.repCount,this.timeout)};MSolrServer.prototype._removeByNS=function(a){var b={};b[MSolrConst.SOLR_URL_KEY]=this.loc;b[MSolrConst.NS_KEY]=a;this.configColl.remove(b);MSolrUtil.getLastError(this.configDB,this.repCount,this.timeout)};
MSolrServer.prototype.toString=function(){return this.loc};MSolrServer.prototype.tojson=function(){return this.toString()};
var MSolr=function(a,b){var c=db.getMongo(),d=a||MSolr.getConfigDBName(c),e=b||MSolrConst.CONFIG_COLLECTION_NAME,f={},g=rs.status(),h=0;this.db=c.getDB(d);this.coll=this.db.getCollection(e);f[MSolrConst.SOLR_URL_KEY]=1;f[MSolrConst.NS_KEY]=1;if(g.errmsg==null){c=g.members;for(d=c.length;d--;)(c[d].state==1||c[d].state==2)&&h++;this.repCount=h}else this.repCount=1;this.coll.ensureIndex(f,{unique:!0})};MSolr._wtimeout=2E3;MSolr.getConfigDBName=function(){return"config"};MSolr.prototype.showConfig=function(){return this.coll.find()};
MSolr.prototype.changeUrl=function(a,b){var c={},d={};c[MSolrConst.SOLR_URL_KEY]=a;d[MSolrConst.SOLR_URL_KEY]=b;this.coll.update(c,{$set:d});MSolrUtil.getLastError(this.db,this.repCount,MSolr._wtimeout)};MSolr.prototype.removeServer=function(a){var b={};b[MSolrConst.SOLR_URL_KEY]=a;this.coll.remove(b);MSolrUtil.getLastError(this.db,this.repCount,MSolr._wtimeout)};MSolr.prototype.server=function(a){return new MSolrServer(this.coll,a,{repCount:this.repCount,timeout:MSolr._wtimeout})};
MSolr.prototype.index=function(a,b,c,d){c==null?this.server(a).index(b):this.server(a).index(b+"."+c,d)};MSolr.prototype.toString=function(){return"config_collection: "+this.coll.getFullName()};MSolr.prototype.tojson=function(){return this.toString()};MSolr.prototype._getConfigColl=function(){return this.coll};MSolr.prototype.reset=function(){return this.coll.remove()};MSolr.DEFAULT=new MSolr;MSolr.showConfig=function(){return MSolr.DEFAULT.showConfig()};MSolr.reset=function(){return MSolr.DEFAULT.reset()};MSolr.SERVER=null;MSolr.connect=function(a){a==null&&(a="http://localhost:8983/solr");MSolr.SERVER=a};MSolr._checkConnection=function(){if(MSolr.SERVER==null)throw"Not connected to any Solr Server.";};DB.prototype.solrIndex=function(){MSolr._checkConnection();MSolr.DEFAULT.index(MSolr.SERVER,this.getName())};DB.prototype.dropSolrIndexes=function(){MSolr._checkConnection();MSolr.DEFAULT.server(MSolr.SERVER).remove(this.getName())};
DB.prototype.getSolrIndexes=function(){var a={},b=RegExp("^"+this.getName()+"\\..+");MSolr._checkConnection();a[MSolrConst.SOLR_URL_KEY]=MSolr.SERVER;a[MSolrConst.NS_KEY]=b;return MSolr.DEFAULT._getConfigColl().find(a)};(function(){var a=DB.prototype.help;DB.prototype.help=function(){a.apply(this);print("\tdb.solrIndex() - sets all collections under this db for Solr indexing");print("\tdb.getSolrIndexes() - shows the Solr indexing configuration for this db");print("\tdb.dropSolrIndex() - removes all collections under this db from Solr indexing")}})();
DBCollection.prototype.solrIndex=function(a){MSolr._checkConnection();MSolr.DEFAULT.index(MSolr.SERVER,this.getFullName(),a)};DBCollection.prototype.getSolrIndexes=function(){var a=this.getFullName(),b={};MSolr._checkConnection();b[MSolrConst.SOLR_URL_KEY]=MSolr.SERVER;b[MSolrConst.NS_KEY]=a;return MSolr.DEFAULT._getConfigColl().find(b)};DBCollection.prototype.dropSolrIndex=function(a){MSolr._checkConnection();MSolr.DEFAULT.server(MSolr.SERVER).remove(this.getFullName(),a)};
DBCollection.prototype.dropSolrIndexes=function(){this.dropSolrIndex()};(function(){var a=DBCollection.prototype.help;DBCollection.prototype.help=function(){a.apply(this);var b=this.getName();print("\tdb."+b+".solrIndex() - set this collection for Solr indexing");print("\tdb."+b+".getSolrIndexes() - show the Solr indexing configuration for this collection");print("\tdb."+b+".dropSolrIndex() - removes this collection from Solr indexing")}})();
